{"version":3,"file":"static/js/387.43ee0c78.chunk.js","mappings":"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","sources":["api-service.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\n// export default class MoviesApiService {\n// \t#key;\n// \t#baseUrl;\n\n// \tconstructor() {\n// \t\tthis.searchQuery = '';\n// \t\tthis.#key = 'd7b55c78972af1312b499784f8cdaa54';\n// \t\tthis.#baseUrl = 'https://api.themoviedb.org/3/';\n// \t\tthis.page = 1;\n// \t\tthis.movieId = 0;\n// \t}\n\n// \tasync fetchMovie() {\n// \t\tconst searchParams = new URLSearchParams({\n// \t\t\tapi_key: this.#key,\n// \t\t});\n\n// \t\tconst url = `${this.#baseUrl}search/movie?${searchParams}&query=${\n// \t\t\tthis.searchQuery\n// \t\t}`;\n// \t\tconst response = await axios.get(url);\n// \t\tconst data = response.data;\n\n// \t\treturn data;\n// \t}\n\n// \tasync fetchUpcomingMovies() {\n// \t\tconst searchParams = new URLSearchParams({\n// \t\t\tapi_key: this.#key,\n// \t\t\tpage: 1,\n// \t\t\tlanguage: 'en-US',\n// \t\t});\n// \t\tconst url = `${this.#baseUrl}movie/upcoming?${searchParams}`;\n// \t\tconst response = await axios.get(url);\n// \t\tconst data = response.data;\n\n// \t\treturn data;\n// \t}\n\n// \tasync fetchTopRatedMovies() {\n// \t\tconst searchParams = new URLSearchParams({\n// \t\t\tapi_key: this.#key,\n// \t\t\tpage: this.page,\n// \t\t\tlanguage: 'en-US',\n// \t\t});\n// \t\tconst url = `${this.#baseUrl}movie/top_rated?${searchParams}`;\n// \t\tconst response = await axios.get(url);\n// \t\tconst data = response.data;\n\n// \t\treturn data.results;\n// \t}\n\n// \tasync fetchMovieDetails(id) {\n// \t\tconst searchParams = new URLSearchParams({\n// \t\t\tapi_key: this.#key,\n// \t\t\tlanguage: 'en-US',\n// \t\t});\n\n// \t\tconst url = `${this.#baseUrl}movie/${id}?${searchParams}`;\n// \t\tconst response = await axios.get(url);\n// \t\tconst data = response.data;\n\n// \t\treturn data;\n// \t}\n\n// \tasync fetchMovieCast(id) {\n// \t\tconst searchParams = new URLSearchParams({\n// \t\t\tapi_key: this.#key,\n// \t\t\tlanguage: 'en-US',\n// \t\t});\n\n// \t\tconst url = `${this.#baseUrl}movie/${id}/credits?${searchParams}`;\n// \t\tconst response = await axios.get(url);\n// \t\tconst data = response.data;\n\n// \t\treturn data;\n// \t}\n\n// \t// async fetchMovieDetailsList(movieId) {\n// \t// \tconst searchParams = new URLSearchParams({\n// \t// \t\tapi_key: this.#key,\n// \t// \t\tlanguage: 'en-US',\n// \t// \t});\n\n// \t// \tconst url = `${this.#baseUrl}movie/${movieId}?${searchParams}`;\n// \t// \tconst response = await axios.get(url);\n// \t// \tconst data = response.data;\n\n// \t// \treturn data;\n// \t// }\n\n// \t// async createRequestToken() {\n// \t// \tconst url = `${this.#baseUrl}authentication/token/new?api_key=${this.#key}`;\n// \t// \tconst response = await axios.get(url);\n// \t// \tconst data = response.data;\n\n// \t// \tlocalStorage.setItem('request-token', data.request_token);\n// \t// \treturn data.request_token;\n// \t// }\n\n// \tincrementPage() {\n// \t\tthis.page += 1;\n// \t}\n\n// \tresetPage() {\n// \t\tthis.page = 1;\n// \t}\n\n// \tget query() {\n// \t\treturn this.searchQuery;\n// \t}\n// \tset query(newQuery) {\n// \t\treturn (this.searchQuery = newQuery);\n// \t}\n\n// }\n\nconst params = {\n\tkey: 'd7b55c78972af1312b499784f8cdaa54',\n\tbaseUrl: 'https://api.themoviedb.org/3/',\n};\n\nconst searchParams = new URLSearchParams({\n\tapi_key: params.key,\n\tlanguage: 'en-US',\n});\n\nasync function fetchMovie(searchQuery) {\n\tconst url = `${params.baseUrl}search/movie?${searchParams}&query=${searchQuery}`;\n\tconst response = await axios.get(url);\n\tconst data = response.data;\n\n\treturn data;\n}\n\nasync function fetchTopRatedMovies() {\n\tconst url = `${params.baseUrl}movie/top_rated?${searchParams}`;\n\tconst response = await axios.get(url);\n\tconst data = response.data;\n\n\treturn data.results;\n}\n\nasync function fetchMovieDetails(id) {\n\tconst url = `${params.baseUrl}movie/${id}?${searchParams}`;\n\tconst response = await axios.get(url);\n\tconst data = response.data;\n\n\treturn data;\n}\n\nasync function fetchMovieCast(id) {\n\tconst url = `${params.baseUrl}movie/${id}/credits?${searchParams}`;\n\tconst response = await axios.get(url);\n\tconst data = response.data;\n\n\treturn data;\n}\n\nasync function fetchMovieReviews(id) {\n\tconst url = `${params.baseUrl}movie/${id}/reviews?${searchParams}`;\n\tconst response = await axios.get(url);\n\tconst data = response.data;\n\n\treturn data;\n}\n\nexport {\n\tfetchMovie,\n\tfetchMovieCast,\n\tfetchMovieDetails,\n\tfetchTopRatedMovies,\n\tfetchMovieReviews,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n\tmargin-top: 30px;\n`;\n\nexport const Heading = styled.h6`\n\tfont-size: 20px;\n\tmargin-left: 20px;\n`;\n\nexport const ContentList = styled.ul`\n\tlist-style: none;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tgap: 20px;\n\tpadding: 0;\n`;\n\nexport const ContentThumb = styled.li`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tborder-radius: 24px;\n\twidth: 160px;\n\ttext-align: center;\n`;\n\nexport const ContentTitle = styled.p`\n\tfont-weight: 600;\n\tmargin-bottom: 10px;\n`;\n\nexport const PosterOverlay = styled.div`\n\theight: 160px;\n\twidth: 106.6px;\n\tborder-radius: 24px;\n\tbackground-image: url('https://www.seekpng.com/png/detail/966-9665317_placeholder-image-person-jpg.png');\n\tbackground-size: cover;\n\tbackground-position: center;\n\tbackground-repeat: no-repeat;\n\toverflow: hidden;\n\tmargin-bottom: 8px;\n`;\nexport const Image = styled.img`\n\tobject-fit: contain;\n\theight: 100%;\n\twidth: 100%;\n`;\n","import { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router';\nimport { fetchMovieCast } from \"../../api-service\";\nimport { Container, ContentList, ContentThumb, ContentTitle, Heading, Image, PosterOverlay} from \"./Cast.styled\";\nimport BeatLoader from \"react-spinners/ClipLoader\";\n\nconst override = {\n    display: \"block\",\n    margin: \"30px auto\",\n  };\n\nconst Cast = () => {\n    const [cast, setCast] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const { movieId } = useParams();\n\n    \n    useEffect(() => {\n        async function getMovieCast() {\n            try {\n                setLoading(true);\n                setError(false);\n                const fetchedCredits = await fetchMovieCast(movieId);\n                console.log('credits', fetchedCredits.cast);\n                setCast(fetchedCredits.cast);\n            } catch (error) {\n                setError(true);\n            } finally {\n                setLoading(false);\n            }\n        }\n\n        getMovieCast();\n    }, [movieId]);\n\n    console.log(cast);\n    return (\n        <div>\n            {error && <p>Sorry, something went wrong! Try reloading the page!</p>}\n            {loading && <BeatLoader\n        color={'#9c92f8'}\n        loading={loading}\n        cssOverride={override}\n        size={150}\n        aria-label=\"Loading Spinner\"\n        data-testid=\"loader\"\n      />}\n            {cast && !loading && <Container>\n                <Heading>Cast</Heading>\n                <ContentList>\n                { cast.length > 20 ? cast.slice(0,20).map((actor) => (<ContentThumb key={actor.id}>\n                    <PosterOverlay>\n                        {actor.profile_path ? <Image src={`http://image.tmdb.org/t/p/w500${actor.profile_path}`} alt={actor.name} /> : <></>}\n                    </PosterOverlay>\n                    <ContentTitle>{actor.name}</ContentTitle>\n                    <p>{actor.character}</p>\n                </ContentThumb>)) : cast.map((actor) => (<ContentThumb key={actor.id}>\n                    <PosterOverlay>\n                        {actor.profile_path ? <Image src={`http://image.tmdb.org/t/p/w500${actor.profile_path}`} alt={actor.name} /> : <></>}\n                    </PosterOverlay>\n                    <ContentTitle>{actor.name}</ContentTitle>\n                    <p>{actor.character}</p>\n                </ContentThumb>))}\n                </ContentList>\n                </Container>}\n        </div>\n    )\n}\n\nexport default Cast;"],"names":["params","key","baseUrl","searchParams","URLSearchParams","api_key","language","fetchMovie","_x","_fetchMovie","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","searchQuery","url","response","data","wrap","_context","prev","next","concat","axios","sent","abrupt","stop","fetchTopRatedMovies","_fetchTopRatedMovies","_callee2","_context2","results","fetchMovieDetails","_x2","_fetchMovieDetails","_callee3","id","_context3","fetchMovieCast","_x3","_fetchMovieCast","_callee4","_context4","fetchMovieReviews","_x4","_fetchMovieReviews","_callee5","_context5","Container","styled","div","_templateObject","_taggedTemplateLiteral","Heading","h6","_templateObject2","ContentList","ul","_templateObject3","ContentThumb","li","_templateObject4","ContentTitle","p","_templateObject5","PosterOverlay","_templateObject6","Image","img","_templateObject7","override","display","margin","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","_getMovieCast","fetchedCredits","console","log","t0","finish","getMovieCast","_jsxs","children","_jsx","BeatLoader","color","cssOverride","size","length","slice","map","actor","profile_path","src","alt","name","_Fragment","character"],"sourceRoot":""}