{"version":3,"file":"static/js/886.9f0fd36d.chunk.js","mappings":"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","sources":["api-service.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchInput/SearchInput.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\n// export default class MoviesApiService {\n// \t#key;\n// \t#baseUrl;\n\n// \tconstructor() {\n// \t\tthis.searchQuery = '';\n// \t\tthis.#key = 'd7b55c78972af1312b499784f8cdaa54';\n// \t\tthis.#baseUrl = 'https://api.themoviedb.org/3/';\n// \t\tthis.page = 1;\n// \t\tthis.movieId = 0;\n// \t}\n\n// \tasync fetchMovie() {\n// \t\tconst searchParams = new URLSearchParams({\n// \t\t\tapi_key: this.#key,\n// \t\t});\n\n// \t\tconst url = `${this.#baseUrl}search/movie?${searchParams}&query=${\n// \t\t\tthis.searchQuery\n// \t\t}`;\n// \t\tconst response = await axios.get(url);\n// \t\tconst data = response.data;\n\n// \t\treturn data;\n// \t}\n\n// \tasync fetchUpcomingMovies() {\n// \t\tconst searchParams = new URLSearchParams({\n// \t\t\tapi_key: this.#key,\n// \t\t\tpage: 1,\n// \t\t\tlanguage: 'en-US',\n// \t\t});\n// \t\tconst url = `${this.#baseUrl}movie/upcoming?${searchParams}`;\n// \t\tconst response = await axios.get(url);\n// \t\tconst data = response.data;\n\n// \t\treturn data;\n// \t}\n\n// \tasync fetchTopRatedMovies() {\n// \t\tconst searchParams = new URLSearchParams({\n// \t\t\tapi_key: this.#key,\n// \t\t\tpage: this.page,\n// \t\t\tlanguage: 'en-US',\n// \t\t});\n// \t\tconst url = `${this.#baseUrl}movie/top_rated?${searchParams}`;\n// \t\tconst response = await axios.get(url);\n// \t\tconst data = response.data;\n\n// \t\treturn data.results;\n// \t}\n\n// \tasync fetchMovieDetails(id) {\n// \t\tconst searchParams = new URLSearchParams({\n// \t\t\tapi_key: this.#key,\n// \t\t\tlanguage: 'en-US',\n// \t\t});\n\n// \t\tconst url = `${this.#baseUrl}movie/${id}?${searchParams}`;\n// \t\tconst response = await axios.get(url);\n// \t\tconst data = response.data;\n\n// \t\treturn data;\n// \t}\n\n// \tasync fetchMovieCast(id) {\n// \t\tconst searchParams = new URLSearchParams({\n// \t\t\tapi_key: this.#key,\n// \t\t\tlanguage: 'en-US',\n// \t\t});\n\n// \t\tconst url = `${this.#baseUrl}movie/${id}/credits?${searchParams}`;\n// \t\tconst response = await axios.get(url);\n// \t\tconst data = response.data;\n\n// \t\treturn data;\n// \t}\n\n// \t// async fetchMovieDetailsList(movieId) {\n// \t// \tconst searchParams = new URLSearchParams({\n// \t// \t\tapi_key: this.#key,\n// \t// \t\tlanguage: 'en-US',\n// \t// \t});\n\n// \t// \tconst url = `${this.#baseUrl}movie/${movieId}?${searchParams}`;\n// \t// \tconst response = await axios.get(url);\n// \t// \tconst data = response.data;\n\n// \t// \treturn data;\n// \t// }\n\n// \t// async createRequestToken() {\n// \t// \tconst url = `${this.#baseUrl}authentication/token/new?api_key=${this.#key}`;\n// \t// \tconst response = await axios.get(url);\n// \t// \tconst data = response.data;\n\n// \t// \tlocalStorage.setItem('request-token', data.request_token);\n// \t// \treturn data.request_token;\n// \t// }\n\n// \tincrementPage() {\n// \t\tthis.page += 1;\n// \t}\n\n// \tresetPage() {\n// \t\tthis.page = 1;\n// \t}\n\n// \tget query() {\n// \t\treturn this.searchQuery;\n// \t}\n// \tset query(newQuery) {\n// \t\treturn (this.searchQuery = newQuery);\n// \t}\n\n// }\n\nconst params = {\n\tkey: 'd7b55c78972af1312b499784f8cdaa54',\n\tbaseUrl: 'https://api.themoviedb.org/3/',\n};\n\nconst searchParams = new URLSearchParams({\n\tapi_key: params.key,\n\tlanguage: 'en-US',\n});\n\nasync function fetchMovie(searchQuery) {\n\tconst url = `${params.baseUrl}search/movie?${searchParams}&query=${searchQuery}`;\n\tconst response = await axios.get(url);\n\tconst data = response.data;\n\n\treturn data;\n}\n\nasync function fetchTopRatedMovies() {\n\tconst url = `${params.baseUrl}movie/top_rated?${searchParams}`;\n\tconst response = await axios.get(url);\n\tconst data = response.data;\n\n\treturn data.results;\n}\n\nasync function fetchMovieDetails(id) {\n\tconst url = `${params.baseUrl}movie/${id}?${searchParams}`;\n\tconst response = await axios.get(url);\n\tconst data = response.data;\n\n\treturn data;\n}\n\nasync function fetchMovieCast(id) {\n\tconst url = `${params.baseUrl}movie/${id}/credits?${searchParams}`;\n\tconst response = await axios.get(url);\n\tconst data = response.data;\n\n\treturn data;\n}\n\nasync function fetchMovieReviews(id) {\n\tconst url = `${params.baseUrl}movie/${id}/reviews?${searchParams}`;\n\tconst response = await axios.get(url);\n\tconst data = response.data;\n\n\treturn data;\n}\n\nexport {\n\tfetchMovie,\n\tfetchMovieCast,\n\tfetchMovieDetails,\n\tfetchTopRatedMovies,\n\tfetchMovieReviews,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Heading = styled.h3`\n\tfont-weight: 600;\n\tfont-size: 32px;\n\tline-height: 1.25;\n\tmargin-top: 15px;\n\tmargin-bottom: 15px;\n\tcolor: #475069;\n`;\n\nexport const StyledLink = styled(Link)`\n\tfont-weight: 400;\n\tfont-size: 18px;\n\tmargin-bottom: 15px;\n\tcolor: #475069;\n\ttext-decoration: none;\n\n\t&:hover {\n\t\tcolor: #9c92f8;\n\t}\n`;\n","import { Heading, StyledLink } from \"./MoviesList.styled\";\nimport propTypes from 'prop-types';\n\n\nexport const MoviesList = ({movies, heading, state}) => {\n\n    return (\n        <>\n        <Heading>{heading}</Heading>\n        <ul>\n           {movies.map((movie) => {\n            return (\n           <li key={movie.id}><StyledLink to={state.from === '/' ? `movies/${movie.id}` : `${movie.id}`} state={{from: state.from}}>{movie.title}</StyledLink></li>)})}\n        </ul>\n        </>\n    )\n}\n\nMoviesList.propTypes = {\n    movies: propTypes.arrayOf(propTypes.object),\n    heading: propTypes.string,\n    state: propTypes.object\n}","import styled from 'styled-components';\nimport propTypes from 'prop-types';\n\n\nexport const StyledInput = styled.input`\nwidth: 200px;\n    padding: 5px;\n    margin-top: 20px;\n    border: 2px solid #9c92f8;\n    border-radius: 7px;\n    outline: none;\n`;\n\nexport const SearchInput = ({onChange, query}) => {\n    return (<StyledInput\n        type=\"text\"\n        name=\"searchQuery\"\n        value={query}\n        onChange={onChange}\n       ></StyledInput>)\n}\n\nSearchInput.propTypes = {\n    onChange: propTypes.func,\n    query: propTypes.string\n}","import { useEffect, useState } from 'react';\nimport BeatLoader from 'react-spinners/ClipLoader';\nimport { SearchInput } from '../components/SearchInput/SearchInput';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovie } from '../api-service';\nimport { MoviesList } from '../components/MoviesList/MoviesList';\n\nconst override = {\n\tdisplay: 'block',\n\tmargin: '100px auto',\n};\n\n\nconst Movies = () => {\n    const [movie, setMovie] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\") || '';\n    const location = useLocation();\n    const backLink = location.pathname+location.search;\n\n    useEffect(()=> {\n        if(query === '') {\n            return;\n        }\n\n        async function getMovieByQuery() {\n            try {\n                setLoading(true);\n                setError(false);\n                const fetchedMovie = await fetchMovie(query);\n                setMovie(fetchedMovie.results);\n            } catch (error) {\n                setError(true);\n            } finally {\n                setLoading(false);\n            }\n        }\n\n        getMovieByQuery();\n    }, [query])\n\n    const handleChange = e => {\n        const { value } = e.currentTarget;\n        value === '' ? setSearchParams({}) : setSearchParams({query: value.toLowerCase()});\n    };\n    \n    return (\n        <main>\n            <SearchInput onChange={handleChange} query={query}></SearchInput>\n            {error && <p>Sorry, something went wrong! Try reloading the page!</p>}\n            {loading && <BeatLoader\n\tcolor={'#9c92f8'}\n\tloading={loading}\n\tcssOverride={override}\n\tsize={150}\n\taria-label=\"Loading Spinner\"\n\tdata-testid=\"loader\"\n/>}\n{movie && !loading && <MoviesList movies={movie} heading={'Results'} state={{from: backLink}}/>}     \n        </main>\n    )\n\n}\n\nexport default Movies;"],"names":["params","key","baseUrl","searchParams","URLSearchParams","api_key","language","fetchMovie","_x","_fetchMovie","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","searchQuery","url","response","data","wrap","_context","prev","next","concat","axios","sent","abrupt","stop","fetchTopRatedMovies","_fetchTopRatedMovies","_callee2","_context2","results","fetchMovieDetails","_x2","_fetchMovieDetails","_callee3","id","_context3","fetchMovieCast","_x3","_fetchMovieCast","_callee4","_context4","fetchMovieReviews","_x4","_fetchMovieReviews","_callee5","_context5","Heading","styled","h3","_templateObject","_taggedTemplateLiteral","StyledLink","Link","_templateObject2","MoviesList","_ref","movies","heading","state","_jsxs","_Fragment","children","_jsx","map","movie","to","from","title","StyledInput","input","SearchInput","onChange","query","type","name","value","override","display","margin","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","setSearchParams","get","location","useLocation","backLink","pathname","search","useEffect","_getMovieByQuery","fetchedMovie","t0","finish","getMovieByQuery","e","currentTarget","toLowerCase","BeatLoader","color","cssOverride","size"],"sourceRoot":""}